"""
Django settings for levelup project.

Generated by 'django-admin startproject' using Django 1.10.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

import cloudinary
from django.contrib import messages
from django.template.loader import get_template
from django.urls import reverse_lazy
from django.utils.translation import ugettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))

DEBUG = False

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=b)dhg=&ct5^rayyjb#de3cywg)oq)-!6j$h@^bq9kgj!-bf3k'

HEROKU_HOST = 'level-up-eu.herokuapp.com'
ALLOWED_HOSTS = [HEROKU_HOST, 'payments.webcourse.niksula.hut.fi']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'debug_toolbar',
    'cloudinary',
    'django_extensions',
    'foundation',  # https://pypi.python.org/pypi/django-zurb-foundation
    'users',
    'games',
    'transactions',
    'api',
    # 3rd party authentication
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
]

MIDDLEWARE = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'levelup.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            'levelup/templates',
            'users/templates',
            'transactions/templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.i18n',
                'django.contrib.messages.context_processors.messages',
                'levelup.context_processors.menu_structure',
            ],
        },
    },
]

WSGI_APPLICATION = 'levelup.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

# Update database configuration with $DATABASE_URL.
import dj_database_url

DATABASES = {
    'default': dj_database_url.config(conn_max_age=500)
}

FIXTURE_DIRS = [
    'levelup/fixtures/',
]

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOCALE_PATHS = [
    'locale/',
]

LANGUAGES = [
    ('en', _('English')),
    ('fi', _('Finnish')),
    ('it', _('Italian')),
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/
STATIC_URL = '/static/'

# Extra places for collectstatic to find static files.

STATICFILES_DIRS = (
    os.path.join(PROJECT_ROOT, 'static'),
)

# Override production variables if DJANGO_DEVELOPMENT env variable is set
if os.environ.get('DJANGO_DEVELOPMENT'):
    from .settings_dev import *
else:
    STATIC_ROOT = os.path.join(PROJECT_ROOT, 'staticfiles')
    STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'

MEDIA_ROOT = "levelup/static/images/"

LOGIN_REDIRECT_URL = '/'
LOGIN_URL = reverse_lazy('login')

LOGOUT_REDIRECT_URL = reverse_lazy('home')

# Class attributes for messages

MESSAGE_TAGS = {
    messages.DEBUG: 'secondary',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'alert',
}

cloudinary.config(
    cloud_name="dwtzeje5s",
    api_key="332167819138434",
    api_secret="0zj5ZvaKyLP_57MZyhkWdlI8_bw"
)

# Payment service seller_id and Secret Key
PAYMENT_SERVICE_SELLER_ID = 'WSDProjectLevelUp2017'
PAYMENT_SERVICE_SECRET_KEY = '0aef063aa5876a77623b466e4800af19'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'ERROR'),
        },
    },
}

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'levelupeu@gmail.com'
EMAIL_HOST_PASSWORD = 'w3r-rKt-YoH-5Qh'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

REGISTRATION_EMAIL_SUBJECT = 'Welcome to LevelUp'
AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)

SITE_ID = 1  # id of the site, if there is no site with id=1, django will raise an error about 'Site matching query'
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
SOCIALACCOUNT_AUTO_SIGNUP = False
LOGIN_REDIRECT_URL = '/'
ACCOUNT_SIGNUP_FORM_CLASS = 'users.forms.SignupSocialForm'
